package com.crud.sample.beans;
// Generated Dec 19, 2016 7:47:02 PM by Hibernate Tools 3.6.0.Final

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

/**
 * SsoCategories generated by hbm2java
 */
@Entity
@JsonIgnoreProperties(ignoreUnknown = true)
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property="id")
@Table(name = "SSO_CATEGORIES")
public class SsoCategories implements java.io.Serializable {

	private double id;
	
	@Size(min= 3, max= 20)
	private String name;
	
	@NotNull
	private String createdBy;
	
	@NotNull
	private Date createdDt;
	
	private String updatedBy;
	private Date updatedDt;
	
	@Pattern(regexp="^(A|I){1}$")
	private String statusFlg;
	private Set<SsoApplications> ssoApplicationses = new HashSet<SsoApplications>();

	public SsoCategories() {
		//Empty Constructor
	}

	public SsoCategories(long id, String name, String createdBy, Date createdDt, String statusFlg) {
		this.id = id;
		this.name = name;
		this.createdBy = createdBy;
		this.createdDt = createdDt;
		this.statusFlg = statusFlg;
	}

	public SsoCategories(long id, String name, String createdBy, Date createdDt, String updatedBy, Date updatedDt,
			String statusFlg, Set<SsoApplications> ssoApplicationses) {
		this.id = id;
		this.name = name;
		this.createdBy = (createdBy == null ? "" : createdBy);
		this.createdDt = createdDt;
		this.updatedBy = updatedBy;
		this.updatedDt = updatedDt;
		this.statusFlg = statusFlg;
		this.ssoApplicationses = ssoApplicationses;
	}

	@Id

	@Column(name = "ID", unique = true, nullable = false, precision = 22, scale = 0)
	public double getId() {
		return this.id;
	}

	public void setId(double id) {
		this.id = id;
	}

	@Column(name = "NAME", nullable = false, length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "CREATED_BY", nullable = false, length = 100)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DT", nullable = false, columnDefinition="DATE")
	@JsonFormat(shape=JsonFormat.Shape.STRING, pattern="yyyy-MM-dd HH:mm:ss", timezone = "IST")
	public Date getCreatedDt() {
		return this.createdDt;
	}

	public void setCreatedDt(Date createdDt) {
		this.createdDt = createdDt;
	}

	@Column(name = "UPDATED_BY", length = 100)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "UPDATED_DT")
	public Date getUpdatedDt() {
		return this.updatedDt;
	}

	public void setUpdatedDt(Date updatedDt) {
		this.updatedDt = updatedDt;
	}

	@Column(name = "STATUS_FLG", nullable = false, length = 2)
	public String getStatusFlg() {
		return this.statusFlg;
	}

	public void setStatusFlg(String statusFlg) {
		this.statusFlg = statusFlg;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ssoCategories", cascade=CascadeType.ALL)	
	@JsonIgnore
	//@JsonManagedReference
	public Set<SsoApplications> getSsoApplicationses() {
		return this.ssoApplicationses;
	}

	public void setSsoApplicationses(Set<SsoApplications> ssoApplicationses) {
		this.ssoApplicationses = ssoApplicationses;
	}

}
